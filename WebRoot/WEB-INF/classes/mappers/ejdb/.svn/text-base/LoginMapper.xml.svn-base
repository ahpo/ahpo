<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easygo.dao.ejdb.LoginMapper" >
  <resultMap id="BaseResultMap" type="com.easygo.vo.ejdb.Login" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="othername" property="othername" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="randomcode" property="randomcode" jdbcType="VARCHAR" />
    <result column="randomstr" property="randomstr" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="usertype" property="usertype" jdbcType="INTEGER" />
    <result column="hittimes" property="hittimes" jdbcType="INTEGER" />
    <result column="lastlogintime" property="lastlogintime" jdbcType="VARCHAR" />
    <result column="updatadate" property="updatadate" jdbcType="TIMESTAMP" />
    <result column="person" property="person" jdbcType="VARCHAR" />
    <result column="back" property="back" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, othername, password, randomcode, randomstr, idcard, address, tel, mobile, 
    usertype, hittimes, lastlogintime, updatadate, person, back
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.easygo.vo.ejdb.LoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example != null and example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login
    <if test="example != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
     limit #{offset}, #{pageSize}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.easygo.vo.ejdb.LoginExample" >
    delete from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easygo.vo.ejdb.Login" >
    insert into login (id, username, othername, 
      password, randomcode, randomstr, 
      idcard, address, tel, 
      mobile, usertype, hittimes, 
      lastlogintime, updatadate, person, 
      back)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{othername,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{randomcode,jdbcType=VARCHAR}, #{randomstr,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, #{hittimes,jdbcType=INTEGER}, 
      #{lastlogintime,jdbcType=VARCHAR}, #{updatadate,jdbcType=TIMESTAMP}, #{person,jdbcType=VARCHAR}, 
      #{back,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.easygo.vo.ejdb.Login" >
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="othername != null" >
        othername,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="randomcode != null" >
        randomcode,
      </if>
      <if test="randomstr != null" >
        randomstr,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
      <if test="hittimes != null" >
        hittimes,
      </if>
      <if test="lastlogintime != null" >
        lastlogintime,
      </if>
      <if test="updatadate != null" >
        updatadate,
      </if>
      <if test="person != null" >
        person,
      </if>
      <if test="back != null" >
        back,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="othername != null" >
        #{othername,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="randomcode != null" >
        #{randomcode,jdbcType=VARCHAR},
      </if>
      <if test="randomstr != null" >
        #{randomstr,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="hittimes != null" >
        #{hittimes,jdbcType=INTEGER},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=VARCHAR},
      </if>
      <if test="updatadate != null" >
        #{updatadate,jdbcType=TIMESTAMP},
      </if>
      <if test="person != null" >
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="back != null" >
        #{back,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easygo.vo.ejdb.LoginExample" resultType="java.lang.Integer" >
    select count(*) from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update login
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.othername != null" >
        othername = #{record.othername,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.randomcode != null" >
        randomcode = #{record.randomcode,jdbcType=VARCHAR},
      </if>
      <if test="record.randomstr != null" >
        randomstr = #{record.randomstr,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.hittimes != null" >
        hittimes = #{record.hittimes,jdbcType=INTEGER},
      </if>
      <if test="record.lastlogintime != null" >
        lastlogintime = #{record.lastlogintime,jdbcType=VARCHAR},
      </if>
      <if test="record.updatadate != null" >
        updatadate = #{record.updatadate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.person != null" >
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.back != null" >
        back = #{record.back,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update login
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      othername = #{record.othername,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      randomcode = #{record.randomcode,jdbcType=VARCHAR},
      randomstr = #{record.randomstr,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      usertype = #{record.usertype,jdbcType=INTEGER},
      hittimes = #{record.hittimes,jdbcType=INTEGER},
      lastlogintime = #{record.lastlogintime,jdbcType=VARCHAR},
      updatadate = #{record.updatadate,jdbcType=TIMESTAMP},
      person = #{record.person,jdbcType=VARCHAR},
      back = #{record.back,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easygo.vo.ejdb.Login" >
    update login
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="othername != null" >
        othername = #{othername,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="randomcode != null" >
        randomcode = #{randomcode,jdbcType=VARCHAR},
      </if>
      <if test="randomstr != null" >
        randomstr = #{randomstr,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="hittimes != null" >
        hittimes = #{hittimes,jdbcType=INTEGER},
      </if>
      <if test="lastlogintime != null" >
        lastlogintime = #{lastlogintime,jdbcType=VARCHAR},
      </if>
      <if test="updatadate != null" >
        updatadate = #{updatadate,jdbcType=TIMESTAMP},
      </if>
      <if test="person != null" >
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="back != null" >
        back = #{back,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easygo.vo.ejdb.Login" >
    update login
    set username = #{username,jdbcType=VARCHAR},
      othername = #{othername,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      randomcode = #{randomcode,jdbcType=VARCHAR},
      randomstr = #{randomstr,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=INTEGER},
      hittimes = #{hittimes,jdbcType=INTEGER},
      lastlogintime = #{lastlogintime,jdbcType=VARCHAR},
      updatadate = #{updatadate,jdbcType=TIMESTAMP},
      person = #{person,jdbcType=VARCHAR},
      back = #{back,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>