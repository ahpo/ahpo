package com.easygo.service.impl.ejdb;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.easygo.dao.ejdb.RoadInfoMapper;
import com.easygo.service.ejdb.RoadInfoService;
import com.easygo.vo.ejdb.RoadInfo;
import com.easygo.vo.ejdb.RoadInfoExample;
import com.pub.service.impl.ServiceImpl;

@Service("roadInfoService")
public class RoadInfoServiceImpl extends ServiceImpl implements RoadInfoService {

	@Resource
	private RoadInfoMapper roadInfoMapper;

	public RoadInfoMapper getRoadInfoMapper() {
		return roadInfoMapper;
	}

	public void setRoadInfoMapper(RoadInfoMapper roadInfoMapper) {
		this.roadInfoMapper = roadInfoMapper;
	}

	public int countByExample(RoadInfoExample example) {
		// TODO Auto-generated method stub
		logger.info("get count by example");
		return roadInfoMapper.countByExample(example);
	}

	public List<RoadInfo> selectPageByExample(RoadInfoExample example,
			int offset, int pageSize) {
		// TODO Auto-generated method stub
		logger.info("get roadInfos in page by example...");
		return roadInfoMapper.selectPageByExample(example, offset, pageSize);
	}

	public RoadInfo selectByPrimaryKey(Integer id) {
		// TODO Auto-generated method stub
		logger.info("get roadInfo by id...");
		return roadInfoMapper.selectByPrimaryKey(id);
	}

	public int updateByPrimaryKey(RoadInfo record) {
		// TODO Auto-generated method stub
		logger.info("update roadInfo by id...");
		return roadInfoMapper.updateByPrimaryKey(record);
	}

	public List<RoadInfo> selectByExample(RoadInfoExample example) {
		// TODO Auto-generated method stub
		logger.info("get roadInfo list by example...");
		return roadInfoMapper.selectByExample(example);
	}

	/**
	 * 相似性记录检�?
	 * 
	 * @param example
	 * @param id roadInfo的id
	 * @param flag 0:修改; 1:插入
	 * @return
	 */
	public boolean checkSimilarity(RoadInfoExample example, Integer id, int flag) {
		List<RoadInfo> list = roadInfoMapper.selectByExample(example);
		if (list == null || list.size() < 1) {
			return true;
		}

		if (flag == 0) { // update
			if (list.size() == 1 && list.get(0).getId().equals(id)) {
				return true;
			}
		}

		// other: return false
		return false;
	}

	public int insertSelective(RoadInfo record) {
		// TODO Auto-generated method stub
		logger.info("insert record into roadInfo...");
		return roadInfoMapper.insertSelective(record);
	}

	public int deleteByPrimaryKey(Integer id) {
		// TODO Auto-generated method stub
		logger.info("delete record["+id+"] from roadInfo...");
		return roadInfoMapper.deleteByPrimaryKey(id);
	}

}
