<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easygo.dao.RoadPositionMapper" >
  <resultMap id="BaseResultMap" type="com.easygo.vo.RoadPosition" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="roadid" property="roadid" jdbcType="INTEGER" />
    <result column="roadlatitdue" property="roadlatitdue" jdbcType="DOUBLE" />
    <result column="roadlongitdue" property="roadlongitdue" jdbcType="DOUBLE" />
    <result column="recordtime" property="recordtime" jdbcType="VARCHAR" />
    <result column="updatadate" property="updatadate" jdbcType="TIMESTAMP" />
    <result column="person" property="person" jdbcType="VARCHAR" />
    <result column="back" property="back" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, roadid, roadlatitdue, roadlongitdue, recordtime, updatadate, person, back
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.easygo.vo.RoadPositionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roadposition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example != null and example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roadposition
    <if test="example != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
     limit #{offset}, #{pageSize}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from roadposition
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from roadposition
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.easygo.vo.RoadPositionExample" >
    delete from roadposition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.easygo.vo.RoadPosition" >
    insert into roadposition (id, roadid, roadlatitdue, 
      roadlongitdue, recordtime, updatadate, 
      person, back)
    values (#{id,jdbcType=INTEGER}, #{roadid,jdbcType=INTEGER}, #{roadlatitdue,jdbcType=DOUBLE}, 
      #{roadlongitdue,jdbcType=DOUBLE}, #{recordtime,jdbcType=VARCHAR}, #{updatadate,jdbcType=TIMESTAMP}, 
      #{person,jdbcType=VARCHAR}, #{back,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.easygo.vo.RoadPosition" >
    insert into roadposition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roadid != null" >
        roadid,
      </if>
      <if test="roadlatitdue != null" >
        roadlatitdue,
      </if>
      <if test="roadlongitdue != null" >
        roadlongitdue,
      </if>
      <if test="recordtime != null" >
        recordtime,
      </if>
      <if test="updatadate != null" >
        updatadate,
      </if>
      <if test="person != null" >
        person,
      </if>
      <if test="back != null" >
        back,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roadid != null" >
        #{roadid,jdbcType=INTEGER},
      </if>
      <if test="roadlatitdue != null" >
        #{roadlatitdue,jdbcType=DOUBLE},
      </if>
      <if test="roadlongitdue != null" >
        #{roadlongitdue,jdbcType=DOUBLE},
      </if>
      <if test="recordtime != null" >
        #{recordtime,jdbcType=VARCHAR},
      </if>
      <if test="updatadate != null" >
        #{updatadate,jdbcType=TIMESTAMP},
      </if>
      <if test="person != null" >
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="back != null" >
        #{back,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.easygo.vo.RoadPositionExample" resultType="java.lang.Integer" >
    select count(*) from roadposition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update roadposition
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roadid != null" >
        roadid = #{record.roadid,jdbcType=INTEGER},
      </if>
      <if test="record.roadlatitdue != null" >
        roadlatitdue = #{record.roadlatitdue,jdbcType=DOUBLE},
      </if>
      <if test="record.roadlongitdue != null" >
        roadlongitdue = #{record.roadlongitdue,jdbcType=DOUBLE},
      </if>
      <if test="record.recordtime != null" >
        recordtime = #{record.recordtime,jdbcType=VARCHAR},
      </if>
      <if test="record.updatadate != null" >
        updatadate = #{record.updatadate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.person != null" >
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.back != null" >
        back = #{record.back,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update roadposition
    set id = #{record.id,jdbcType=INTEGER},
      roadid = #{record.roadid,jdbcType=INTEGER},
      roadlatitdue = #{record.roadlatitdue,jdbcType=DOUBLE},
      roadlongitdue = #{record.roadlongitdue,jdbcType=DOUBLE},
      recordtime = #{record.recordtime,jdbcType=VARCHAR},
      updatadate = #{record.updatadate,jdbcType=TIMESTAMP},
      person = #{record.person,jdbcType=VARCHAR},
      back = #{record.back,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.easygo.vo.RoadPosition" >
    update roadposition
    <set >
      <if test="roadid != null" >
        roadid = #{roadid,jdbcType=INTEGER},
      </if>
      <if test="roadlatitdue != null" >
        roadlatitdue = #{roadlatitdue,jdbcType=DOUBLE},
      </if>
      <if test="roadlongitdue != null" >
        roadlongitdue = #{roadlongitdue,jdbcType=DOUBLE},
      </if>
      <if test="recordtime != null" >
        recordtime = #{recordtime,jdbcType=VARCHAR},
      </if>
      <if test="updatadate != null" >
        updatadate = #{updatadate,jdbcType=TIMESTAMP},
      </if>
      <if test="person != null" >
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="back != null" >
        back = #{back,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.easygo.vo.RoadPosition" >
    update roadposition
    set roadid = #{roadid,jdbcType=INTEGER},
      roadlatitdue = #{roadlatitdue,jdbcType=DOUBLE},
      roadlongitdue = #{roadlongitdue,jdbcType=DOUBLE},
      recordtime = #{recordtime,jdbcType=VARCHAR},
      updatadate = #{updatadate,jdbcType=TIMESTAMP},
      person = #{person,jdbcType=VARCHAR},
      back = #{back,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>